name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    name: Build with ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: ./.github/actions/setup-project
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore or cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: nextjs-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('src/**') }}

      - name: Build Next.js
        run: pnpm run build -- --experimental-build-mode compile
        env:
          NEXT_PUBLIC_SENTRY_DISABLED: 'true' # Only upload Sentry source maps in deployment

      - if: matrix.node-version == '20.x' && success()
        name: Cache Next.js build output
        uses: actions/cache/save@v4
        with:
          path: |
            .next
          key: nextjs-build-${{ matrix.node-version }}-${{ github.sha }}
  static:
    strategy:
      matrix:
        node-version: [20.x]

    name: Run static checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Retrieve Git history, needed to verify commits

      - name: Set up Node.js environment
        uses: ./.github/actions/setup-project
        with:
          node-version: ${{ matrix.node-version }}

      - name: Linter
        run: pnpm run lint:ci

      - name: Type checking
        run: pnpm run check-types